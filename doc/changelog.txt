Changelog

0.1.0:
    * Rewrite of original nrc module.

0.2.0:
    * Module system added.

0.3.0:
    * Removal of the Protocols dependency. There's no logging at the moment.
    * Modules are moved to their own object.
    * BiSubscriber handlers the subscribing of events to either the
      IRCMessageEmitter or the IRCCommandEmitter.
    * Default NRC Modules are disabled (until the next version)

0.4.0: The Module update.
    * Event listeners are no longer bound to 'nrc'.
    * Message and Command objects use 'args' instead of 'params/parameters'.
      This follows the same naming convention that node-irc uses.
    * Default NRC Modules are refactored so that they return a function that
      returns a module.
    * ModuleSubscriber.requires() interface contract changed so that it takes
      a one-arg constructor (that arg being the NRC object for the server the
      module will be on) that returns a module.
    * Module contract gains additional optional field for dependencies:
        + dependencies(undefined U ModuleExports): List[String] U undefined
    * Only the server module works.

0.4.1:
    * Added a new test for Message Handlers.

0.4.2: (Unreleased)
    * Renamed classes.
    * Added an IrcOutputSocket class. NRC absorbs it of course.
    * Added everything to the index.
    * Got Dependency Injection for all non-structure objects.
    * Added `userhost` method to IrcOutputSocket/NRC.

0.4.3:
    * Nrc class renamed to Client.
    * `whois` method added to IrcOutputSocket/Client
    * Moved startup stuff from IrcMessageHandler to Client.
    ** Removed config parameter from its constructor. :)
    * Testing of 'say', 'part', and 'quit' of the IrcOutputSocket.
    ** Feel free to add more tests!

0.4.4:
    * Made dependency injection argument of Client optional.
    * Started the ChunkedMessageParser. Not working.

0.5.0: The Tennu update.
    * Moved module system to its own project.
    * Module system completely revamped.
    * Module loading via name and tennu_modules directory-tree climb.
    * Modules no longer have internal 'name' property.
    * Moved IRC socket to its own project.
    * Got the project building again.
    * Renamed from NRC to Tennu

0.5.1:
    * Fixed OutputSocket.ctcp and OutputSocket.act

0.5.2:
    * Require 1.0.1 of simple-irc-socket for logging.

0.5.3:
    * Hotfix: this._name() doesn't exist in CommandParser

0.6.0: The irc-message update.
    * BACKWARDS INCOMPATIBLE! Changed property names for Message and Command
      to align with IRC specification and the irc-message module.
      See updating.txt for more information.
    * BACKWARDS INCOMPATIBLE! Messages with command type of "nick" have the "newNick" property chaned to "new"
    * BACKWARDS INCOMPATIBLE! Removed the extension for the 353 numeric. It wasn't actually doing anything useful.
      It'll be readded in the future, but actually do some useful parsing. Use .params[0] to get it..
    * Help Module reimplemented. See "help.md" for more information.
    * "Respond" functionality. The return value for listeners that have a channel is said to the channel. No more doing tennu.say(message.channel, what_you_want_to_say). Just do `return what_you_want_to_say;`! In the future, we'll allow promises too.
    * Add .out and .events to Client as aliases to the OutputSocket and BiSubscriber.
    * Messages with the command type of "nick" have the property "old" added, which is an alias for the "nickname" property.
    * Commands have a [[prototype]] of the Message that they are parsed from.
    * Message have a tags property. (See: http://ircv3.org/specification/message-tags-3.2 and https://github.com/expr/irc-message)
    * Removed all default logging.

    * Use irc-message as the base Message parser.
    * simple-irc-socket got renamed to irc-socket, plus is more functional.
    * Replaced mout with lodash.
    * Removed Grunt.js

    * Bugfix: Multiple spaces between words will not mess up commands and message parsing. Thanks expr for reporting.
    * Bugfix: Arbitrary events won't fire when passed incomplete messages from server (fixed in irc-socket)

    * Bug: On command, the client will echo the raw message to the channel.

0.6.1:
    * Bugfix: Commands won't echo the raw message back to the originating channel.
    * Bugfix: Unfreeze Messages parsed by MessageParser.
    * Commands return values are echoed to the originating channel (if they are strings).

0.7.0: The Logging and tennu command update.
    * Logging Interface:
      * debug, info, notice, warn, error, crit, alert, emerg methods
      * .log(one_of_above, ...log_message);
      * Logs to nothing by default, so you'll have to pass in a Logger.
    * .nick() nullary version deprecated. Use .nickname() instead.
    * KICK message extension added (channel, kicked, kicker)
    * .then() changed to .after() in ./lib/event-emitter to avoid `thennable assimilation` in ES6.
    * Command Line Tool added. (Use via ./node_modules/tennu/bin/cli.js config.json -v)

    * Bug: Command Line Tool doesn't work installed globally.
    * Bug: MessageHandler gets logger and socket in wrong order.

0.7.1: The I should really test my releases update.
    * Command Line Improvements
    ** -d flag for logging debug. Must be paired with -v.
    ** Errors print the stack.
    * OutputSocket#rawf(format, args...)
    * MessageHandler and CommandHandler log to "error" the stack of the error.
    * Bugfix: CommandHandler listener to MessageHandler no longer returns.
    * Bugfix: Pass socket and logger to MessageHandler in correct order!

0.7.2: The I need this for tennu-admin update.
    * Message Extensions for the following numerics:
    ** 307 - RPL_WHOISREGNICK
    ** 311 - RPL_WHOISUSER
    ** 312 - RPL_WHOISSERVER
    ** 317 - RPL_WHOISIDLE
    ** 318 - RPL_ENDOFWHOIS
    ** 319 - RPL_WHOISCHANNELS
    ** 330 - RPL_WHOISLOGGEDIN
    ** 378 - RPL_WHOISHOST
    ** 401 - ERR_NOSUCHNICK
    * Numerics with extensions will have the MessageHandler emit the replyname.
    * User module exports isIdentifedAs(nickname, nickname_identified, callback).

    * Added mocha, sinon, deep-eql, and better-assert to devDependencies
    * /test directory
    * Using mocha for new tests. Will bring old tests over from Jasmine over time.

    * User Module
    ** isIdentifiedAs(nick_lhs: string, nick_rhs: string): Promise boolean

0.8.0: The promised update.
    * Response can now be a promise of the other types (string, [string])
    * Client.nickname is an instance of NicknameTracker (and still callable).
    * Tennu Modules 2.0.0 Integration.
    ** This was supposed to be for 0.9.0, but was needed first.
    ** Modules are now objects that have the following properties:
    *** init: function (client, imports) => instance
    *** requires: [string]          OPTIONAL, names of modules
    *** requiresRoles: [string]     OPTIONAL, names of roles
    *** role: string                OPTIONAL
    *** name: string                Will be added for you unless you use client.initialize() directly.

0.8.1:
    * client.ctcp() and client.act() fixed.
    * client.initialize() renamed to client.initializeModule()
    * client.isInitializable() renamed to client.isModuleInitializable()

0.8.2:
    * config['disable-help'] set to true will disable the help module.
    * Response can now be an object with the following fields:
      * message (string)        Required, message(s) to say.
      * intent ('say' | 'act')  Defaults to 'say'.
      * query (boolean)         Defaults to false. If true, responds in query.
    * Added fez and sweet.js into the developer dependencies.
      * Note that fez doesn't do anything yet. fez-sweet.js has to be written first.
      * Tests are now using sweet-bdd, but are not compiled.
      * You can compile tests individually with `sjs -m sweet-bdd -o test/%file%.js test-src/%file%.sjs

0.8.3:
    * Response object can now take a target. (Either a channel or nickname)
    * Fez properly builds tests.

0.8.4:
    * Update irc-socket to 2.2.0.
    * Any other change is a bug.
    * Configuration changes:
    ** nickname is an alias for nick. (Prefer nickname)
    ** username is an alias for user. (Prefer username)
    ** Added ipv6 (See irc-socket)
    ** Added localAddress (See irc-socket, net.Socket)

0.9.0:
    [Not yet done]
    * Update tennu-modules 2.x.y to tennu-plugins 3.0.y
    ** Move tennu_modules -> tennu_plugins
    * Remove lib/event-emitter.js, use `after-events` instead.
    ** Basically moved this module to its own package.
    * Configuration changes!
    ** nick -> nickname (As part of v0.8.4, but just reiterating)
    ** user -> username (As part of v0.8.4, but just reiterating)
    ** module -> plugin
    ** trigger -> command-trigger (This is so that plugins that define triggers can do something like `factoid-trigger`)
    ** password -> auth-password (nb: password for the server password will still work)

    * Will work on documentation after this.